% Program for Time Division Multiplexing and Demultiplexing

clc;
close all;
clear all;

% Signal generation
x = 0:0.5:4*pi; % Signal taken up to 4pi with step size 0.5
sig1 = 8*sin(x); % Generate 1st sinusoidal signal
sig2 = 8*triang(length(x)); % Generate 2nd triangular signal with the same length as sig1

% Display of Both Signals
subplot(2,2,1);
plot(sig1);
title('Sinusoidal Signal'); 
ylabel('Amplitude--->'); 
xlabel('Time--->');

subplot(2,2,2);
plot(sig2);
title('Triangular Signal'); 
ylabel('Amplitude--->'); 
xlabel('Time--->');

% Display of Both Sampled Signals
subplot(2,2,3);
stem(sig1);
title('Sampled Sinusoidal Signal');
ylabel('Amplitude--->'); 
xlabel('Time--->');

subplot(2,2,4);
stem(sig2);
title('Sampled Triangular Signal');
ylabel('Amplitude--->'); 
xlabel('Time--->');

% TDM of both quantized signals
sig = zeros(2, length(x)); % Initialize matrix to hold both signals
for i = 1:length(x)
    sig(1,i) = sig1(i); % Making Both row vector to a matrix
    sig(2,i) = sig2(i);
end

tdmsig = reshape(sig, 1, 2*length(x)); % Reshape into TDM signal

% Display of TDM Signal
figure
stem(tdmsig);
title('TDM Signal'); 
ylabel('Amplitude--->'); 
xlabel('Time--->');

% Demultiplexing of TDM Signal
demux = reshape(tdmsig, 2, length(x));

% Separate recovered signals
sig3 = demux(1,:);
sig4 = demux(2,:);

% Display of demultiplexed signals
figure
subplot(2,1,1)
plot(sig3);
title('Recovered Sinusoidal Signal'); 
ylabel('Amplitude--->'); 
xlabel('Time--->');

subplot(2,1,2)
plot(sig4);
title('Recovered Triangular Signal'); 
ylabel('Amplitude--->'); 
xlabel('Time--->');